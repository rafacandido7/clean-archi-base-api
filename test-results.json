{"numTotalTestSuites":38,"numPassedTestSuites":38,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":119,"numPassedTests":119,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1750877937671,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should create user successfully","status":"passed","title":"should create user successfully","duration":5.299524009227753,"failureMessages":[],"location":{"line":56,"column":5},"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should throw error when email already exists","status":"passed","title":"should throw error when email already exists","duration":2.185604989528656,"failureMessages":[],"location":{"line":86,"column":5},"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should throw error when CPF already exists","status":"passed","title":"should throw error when CPF already exists","duration":0.8568869829177856,"failureMessages":[],"location":{"line":102,"column":5},"meta":{}},{"ancestorTitles":["UserService","createUser"],"fullName":"UserService createUser should create user without phone","status":"passed","title":"should create user without phone","duration":0.8277280032634735,"failureMessages":[],"location":{"line":118,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return user when found","status":"passed","title":"should return user when found","duration":0.6457560062408447,"failureMessages":[],"location":{"line":146,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUserById"],"fullName":"UserService getUserById should return null when user not found","status":"passed","title":"should return null when user not found","duration":0.3741379976272583,"failureMessages":[],"location":{"line":166,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return user when found","status":"passed","title":"should return user when found","duration":0.4625389873981476,"failureMessages":[],"location":{"line":180,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUserByEmail"],"fullName":"UserService getUserByEmail should return null when user not found","status":"passed","title":"should return null when user not found","duration":0.22484001517295837,"failureMessages":[],"location":{"line":193,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUserByCPF"],"fullName":"UserService getUserByCPF should return user when found","status":"passed","title":"should return user when found","duration":0.5943170189857483,"failureMessages":[],"location":{"line":206,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUserByCPF"],"fullName":"UserService getUserByCPF should return null when user not found","status":"passed","title":"should return null when user not found","duration":0.2385520040988922,"failureMessages":[],"location":{"line":219,"column":5},"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should update user successfully","status":"passed","title":"should update user successfully","duration":0.6613750159740448,"failureMessages":[],"location":{"line":238,"column":5},"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should throw error when new email is already taken by another user","status":"passed","title":"should throw error when new email is already taken by another user","duration":0.5144370198249817,"failureMessages":[],"location":{"line":254,"column":5},"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should allow updating to same email","status":"passed","title":"should allow updating to same email","duration":0.3844510018825531,"failureMessages":[],"location":{"line":271,"column":5},"meta":{}},{"ancestorTitles":["UserService","updateUser"],"fullName":"UserService updateUser should return null when user not found","status":"passed","title":"should return null when user not found","duration":0.46617600321769714,"failureMessages":[],"location":{"line":284,"column":5},"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should delete user successfully","status":"passed","title":"should delete user successfully","duration":0.29207298159599304,"failureMessages":[],"location":{"line":298,"column":5},"meta":{}},{"ancestorTitles":["UserService","deleteUser"],"fullName":"UserService deleteUser should return false when user not found","status":"passed","title":"should return false when user not found","duration":0.17513999342918396,"failureMessages":[],"location":{"line":310,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUsers"],"fullName":"UserService getUsers should return paginated users","status":"passed","title":"should return paginated users","duration":0.8621959984302521,"failureMessages":[],"location":{"line":323,"column":5},"meta":{}},{"ancestorTitles":["UserService","getUsers"],"fullName":"UserService getUsers should pass filters and pagination to repository","status":"passed","title":"should pass filters and pagination to repository","duration":0.45194101333618164,"failureMessages":[],"location":{"line":353,"column":5},"meta":{}}],"startTime":1750877938364,"endTime":1750877938380.452,"status":"passed","message":"","name":"/home/ec2-user/clean-archi-base-api/src/application/services/user.service.spec.ts"},{"assertionResults":[{"ancestorTitles":["User Entity","User Creation"],"fullName":"User Entity User Creation should create user with valid data","status":"passed","title":"should create user with valid data","duration":2.803287982940674,"failureMessages":[],"location":{"line":19,"column":5},"meta":{}},{"ancestorTitles":["User Entity","User Creation"],"fullName":"User Entity User Creation should create user without phone","status":"passed","title":"should create user without phone","duration":0.5832279920578003,"failureMessages":[],"location":{"line":35,"column":5},"meta":{}},{"ancestorTitles":["User Entity","User Creation"],"fullName":"User Entity User Creation should create user with default dates when not provided","status":"passed","title":"should create user with default dates when not provided","duration":0.5161280035972595,"failureMessages":[],"location":{"line":44,"column":5},"meta":{}},{"ancestorTitles":["User Entity","User Creation"],"fullName":"User Entity User Creation should throw error for invalid email","status":"passed","title":"should throw error for invalid email","duration":1.0243619978427887,"failureMessages":[],"location":{"line":57,"column":5},"meta":{}},{"ancestorTitles":["User Entity","User Creation"],"fullName":"User Entity User Creation should throw error for invalid CPF","status":"passed","title":"should throw error for invalid CPF","duration":0.29620400071144104,"failureMessages":[],"location":{"line":63,"column":5},"meta":{}},{"ancestorTitles":["User Entity","User Creation"],"fullName":"User Entity User Creation should throw error for invalid phone","status":"passed","title":"should throw error for invalid phone","duration":0.37410101294517517,"failureMessages":[],"location":{"line":69,"column":5},"meta":{}},{"ancestorTitles":["User Entity","User Methods","update"],"fullName":"User Entity User Methods update should update user name","status":"passed","title":"should update user name","duration":1.235718011856079,"failureMessages":[],"location":{"line":84,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","update"],"fullName":"User Entity User Methods update should update user email","status":"passed","title":"should update user email","duration":0.4103510081768036,"failureMessages":[],"location":{"line":95,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","update"],"fullName":"User Entity User Methods update should update user phone","status":"passed","title":"should update user phone","duration":0.42844000458717346,"failureMessages":[],"location":{"line":102,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","update"],"fullName":"User Entity User Methods update should remove phone when empty string provided","status":"passed","title":"should remove phone when empty string provided","duration":0.42058899998664856,"failureMessages":[],"location":{"line":109,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","update"],"fullName":"User Entity User Methods update should update multiple fields","status":"passed","title":"should update multiple fields","duration":0.31380799412727356,"failureMessages":[],"location":{"line":116,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","update"],"fullName":"User Entity User Methods update should throw error for invalid email in update","status":"passed","title":"should throw error for invalid email in update","duration":0.2951960265636444,"failureMessages":[],"location":{"line":128,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","update"],"fullName":"User Entity User Methods update should throw error for invalid phone in update","status":"passed","title":"should throw error for invalid phone in update","duration":0.4874660074710846,"failureMessages":[],"location":{"line":132,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","hasPhone"],"fullName":"User Entity User Methods hasPhone should return true when user has phone","status":"passed","title":"should return true when user has phone","duration":0.44916900992393494,"failureMessages":[],"location":{"line":138,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","hasPhone"],"fullName":"User Entity User Methods hasPhone should return false when user has no phone","status":"passed","title":"should return false when user has no phone","duration":0.20662599802017212,"failureMessages":[],"location":{"line":142,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","toPublic"],"fullName":"User Entity User Methods toPublic should return public user data without password","status":"passed","title":"should return public user data without password","duration":0.48529601097106934,"failureMessages":[],"location":{"line":149,"column":7},"meta":{}},{"ancestorTitles":["User Entity","User Methods","toPlainObject"],"fullName":"User Entity User Methods toPlainObject should return plain object with primitive values","status":"passed","title":"should return plain object with primitive values","duration":0.40835100412368774,"failureMessages":[],"location":{"line":164,"column":7},"meta":{}},{"ancestorTitles":["User Entity","Edge Cases"],"fullName":"User Entity Edge Cases should handle user with empty phone","status":"passed","title":"should handle user with empty phone","duration":0.24367201328277588,"failureMessages":[],"location":{"line":180,"column":5},"meta":{}},{"ancestorTitles":["User Entity","Edge Cases"],"fullName":"User Entity Edge Cases should preserve original dates when updating other fields","status":"passed","title":"should preserve original dates when updating other fields","duration":0.32150998711586,"failureMessages":[],"location":{"line":189,"column":5},"meta":{}},{"ancestorTitles":["User Entity","Edge Cases"],"fullName":"User Entity Edge Cases should handle email normalization in creation","status":"passed","title":"should handle email normalization in creation","duration":0.1886340081691742,"failureMessages":[],"location":{"line":201,"column":5},"meta":{}},{"ancestorTitles":["User Entity","Edge Cases"],"fullName":"User Entity Edge Cases should handle CPF formatting in creation","status":"passed","title":"should handle CPF formatting in creation","duration":0.25984901189804077,"failureMessages":[],"location":{"line":208,"column":5},"meta":{}}],"startTime":1750877938979,"endTime":1750877938992.2598,"status":"passed","message":"","name":"/home/ec2-user/clean-archi-base-api/src/domain/entities/user.entity.spec.ts"},{"assertionResults":[{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should create CPF with valid value: 11144477735","status":"passed","title":"should create CPF with valid value: 11144477735","duration":3.8143540024757385,"failureMessages":[],"location":{"line":14,"column":22},"meta":{}},{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should create CPF with valid value: 111.444.777-35","status":"passed","title":"should create CPF with valid value: 111.444.777-35","duration":0.6313080191612244,"failureMessages":[],"location":{"line":14,"column":22},"meta":{}},{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should create CPF with valid value: 12345678909","status":"passed","title":"should create CPF with valid value: 12345678909","duration":0.686051994562149,"failureMessages":[],"location":{"line":14,"column":22},"meta":{}},{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should create CPF with valid value: 123.456.789-09","status":"passed","title":"should create CPF with valid value: 123.456.789-09","duration":0.46761101484298706,"failureMessages":[],"location":{"line":14,"column":22},"meta":{}},{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should create CPF with valid value: 98765432100","status":"passed","title":"should create CPF with valid value: 98765432100","duration":0.5772189795970917,"failureMessages":[],"location":{"line":14,"column":22},"meta":{}},{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should create CPF with valid value: 987.654.321-00","status":"passed","title":"should create CPF with valid value: 987.654.321-00","duration":0.41752099990844727,"failureMessages":[],"location":{"line":14,"column":22},"meta":{}},{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should format CPF correctly","status":"passed","title":"should format CPF correctly","duration":0.37942901253700256,"failureMessages":[],"location":{"line":23,"column":5},"meta":{}},{"ancestorTitles":["CPF Value Object","Valid CPFs"],"fullName":"CPF Value Object Valid CPFs should return clean value without formatting","status":"passed","title":"should return clean value without formatting","duration":0.26990601420402527,"failureMessages":[],"location":{"line":28,"column":5},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: ","status":"passed","title":"should throw error for invalid CPF: ","duration":0.43938300013542175,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: 123","status":"passed","title":"should throw error for invalid CPF: 123","duration":0.33999699354171753,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: 12345678901","status":"passed","title":"should throw error for invalid CPF: 12345678901","duration":0.22981500625610352,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: 11111111111","status":"passed","title":"should throw error for invalid CPF: 11111111111","duration":0.1867619752883911,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: 00000000000","status":"passed","title":"should throw error for invalid CPF: 00000000000","duration":0.18163102865219116,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: 12345678900","status":"passed","title":"should throw error for invalid CPF: 12345678900","duration":0.5018029808998108,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: abc.def.ghi-jk","status":"passed","title":"should throw error for invalid CPF: abc.def.ghi-jk","duration":0.21759700775146484,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: 123.456.789-0","status":"passed","title":"should throw error for invalid CPF: 123.456.789-0","duration":0.16589298844337463,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","Invalid CPFs"],"fullName":"CPF Value Object Invalid CPFs should throw error for invalid CPF: 123.456.789-012","status":"passed","title":"should throw error for invalid CPF: 123.456.789-012","duration":0.16031700372695923,"failureMessages":[],"location":{"line":47,"column":24},"meta":{}},{"ancestorTitles":["CPF Value Object","CPF Methods"],"fullName":"CPF Value Object CPF Methods should compare CPFs correctly","status":"passed","title":"should compare CPFs correctly","duration":3.663982003927231,"failureMessages":[],"location":{"line":53,"column":5},"meta":{}},{"ancestorTitles":["CPF Value Object","CPF Methods"],"fullName":"CPF Value Object CPF Methods should convert to string with formatting","status":"passed","title":"should convert to string with formatting","duration":0.3341270089149475,"failureMessages":[],"location":{"line":62,"column":5},"meta":{}},{"ancestorTitles":["CPF Value Object","CPF Methods"],"fullName":"CPF Value Object CPF Methods should clean CPF input correctly","status":"passed","title":"should clean CPF input correctly","duration":0.13649797439575195,"failureMessages":[],"location":{"line":67,"column":5},"meta":{}},{"ancestorTitles":["CPF Value Object","Edge Cases"],"fullName":"CPF Value Object Edge Cases should handle CPF with extra spaces","status":"passed","title":"should handle CPF with extra spaces","duration":0.15517297387123108,"failureMessages":[],"location":{"line":74,"column":5},"meta":{}},{"ancestorTitles":["CPF Value Object","Edge Cases"],"fullName":"CPF Value Object Edge Cases should handle CPF with different separators","status":"passed","title":"should handle CPF with different separators","duration":0.1093510091304779,"failureMessages":[],"location":{"line":80,"column":5},"meta":{}},{"ancestorTitles":["CPF Value Object","Edge Cases"],"fullName":"CPF Value Object Edge Cases should handle null and undefined","status":"passed","title":"should handle null and undefined","duration":0.3644140064716339,"failureMessages":[],"location":{"line":85,"column":5},"meta":{}}],"startTime":1750877938656,"endTime":1750877938671.3645,"status":"passed","message":"","name":"/home/ec2-user/clean-archi-base-api/src/domain/value-objects/cpf.value-object.spec.ts"},{"assertionResults":[{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should create Email with valid value: test@example.com","status":"passed","title":"should create Email with valid value: test@example.com","duration":3.2479559779167175,"failureMessages":[],"location":{"line":14,"column":24},"meta":{}},{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should create Email with valid value: user.name@domain.co.uk","status":"passed","title":"should create Email with valid value: user.name@domain.co.uk","duration":0.4831389784812927,"failureMessages":[],"location":{"line":14,"column":24},"meta":{}},{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should create Email with valid value: user+tag@example.org","status":"passed","title":"should create Email with valid value: user+tag@example.org","duration":0.48794102668762207,"failureMessages":[],"location":{"line":14,"column":24},"meta":{}},{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should create Email with valid value: user123@test-domain.com","status":"passed","title":"should create Email with valid value: user123@test-domain.com","duration":0.36439600586891174,"failureMessages":[],"location":{"line":14,"column":24},"meta":{}},{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should create Email with valid value: a@b.co","status":"passed","title":"should create Email with valid value: a@b.co","duration":0.3804509937763214,"failureMessages":[],"location":{"line":14,"column":24},"meta":{}},{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should create Email with valid value: very.long.email.address@very.long.domain.name.com","status":"passed","title":"should create Email with valid value: very.long.email.address@very.long.domain.name.com","duration":0.28663399815559387,"failureMessages":[],"location":{"line":14,"column":24},"meta":{}},{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should normalize email to lowercase","status":"passed","title":"should normalize email to lowercase","duration":0.17753100395202637,"failureMessages":[],"location":{"line":22,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Valid Emails"],"fullName":"Email Value Object Valid Emails should trim whitespace","status":"passed","title":"should trim whitespace","duration":0.1502780020236969,"failureMessages":[],"location":{"line":27,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: ","status":"passed","title":"should throw error for invalid email: ","duration":0.49010398983955383,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: invalid","status":"passed","title":"should throw error for invalid email: invalid","duration":0.3215409815311432,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: @example.com","status":"passed","title":"should throw error for invalid email: @example.com","duration":0.21219798922538757,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test@","status":"passed","title":"should throw error for invalid email: test@","duration":0.26330000162124634,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test.example.com","status":"passed","title":"should throw error for invalid email: test.example.com","duration":0.19019699096679688,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test@.com","status":"passed","title":"should throw error for invalid email: test@.com","duration":0.4700939953327179,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test@com","status":"passed","title":"should throw error for invalid email: test@com","duration":0.24132400751113892,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test..test@example.com","status":"passed","title":"should throw error for invalid email: test..test@example.com","duration":0.17038598656654358,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test@example..com","status":"passed","title":"should throw error for invalid email: test@example..com","duration":0.17346498370170593,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test @example.com","status":"passed","title":"should throw error for invalid email: test @example.com","duration":0.15421199798583984,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: test@exam ple.com","status":"passed","title":"should throw error for invalid email: test@exam ple.com","duration":0.28763699531555176,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Invalid Emails"],"fullName":"Email Value Object Invalid Emails should throw error for invalid email: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@example.com","status":"passed","title":"should throw error for invalid email: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@example.com","duration":0.19277998805046082,"failureMessages":[],"location":{"line":49,"column":26},"meta":{}},{"ancestorTitles":["Email Value Object","Email Methods"],"fullName":"Email Value Object Email Methods should extract domain correctly","status":"passed","title":"should extract domain correctly","duration":0.16533499956130981,"failureMessages":[],"location":{"line":55,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Email Methods"],"fullName":"Email Value Object Email Methods should extract local part correctly","status":"passed","title":"should extract local part correctly","duration":0.12730300426483154,"failureMessages":[],"location":{"line":60,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Email Methods"],"fullName":"Email Value Object Email Methods should compare emails correctly","status":"passed","title":"should compare emails correctly","duration":0.20831197500228882,"failureMessages":[],"location":{"line":65,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Email Methods"],"fullName":"Email Value Object Email Methods should convert to string","status":"passed","title":"should convert to string","duration":0.13403701782226562,"failureMessages":[],"location":{"line":74,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Edge Cases"],"fullName":"Email Value Object Edge Cases should handle email with plus sign","status":"passed","title":"should handle email with plus sign","duration":0.19187799096107483,"failureMessages":[],"location":{"line":81,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Edge Cases"],"fullName":"Email Value Object Edge Cases should handle email with numbers","status":"passed","title":"should handle email with numbers","duration":0.12218499183654785,"failureMessages":[],"location":{"line":87,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Edge Cases"],"fullName":"Email Value Object Edge Cases should handle email with hyphens","status":"passed","title":"should handle email with hyphens","duration":0.10688698291778564,"failureMessages":[],"location":{"line":92,"column":5},"meta":{}},{"ancestorTitles":["Email Value Object","Edge Cases"],"fullName":"Email Value Object Edge Cases should handle null and undefined","status":"passed","title":"should handle null and undefined","duration":0.3248260021209717,"failureMessages":[],"location":{"line":97,"column":5},"meta":{}}],"startTime":1750877939567,"endTime":1750877939577.3247,"status":"passed","message":"","name":"/home/ec2-user/clean-archi-base-api/src/domain/value-objects/email.value-object.spec.ts"},{"assertionResults":[{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: +5511987654321","status":"passed","title":"should create Phone with valid value: +5511987654321","duration":3.068884998559952,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: +551187654321","status":"passed","title":"should create Phone with valid value: +551187654321","duration":0.35175302624702454,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: 11987654321","status":"passed","title":"should create Phone with valid value: 11987654321","duration":0.3769509792327881,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: 1187654321","status":"passed","title":"should create Phone with valid value: 1187654321","duration":0.2916710078716278,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: (11) 98765-4321","status":"passed","title":"should create Phone with valid value: (11) 98765-4321","duration":0.3181290030479431,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: (11) 8765-4321","status":"passed","title":"should create Phone with valid value: (11) 8765-4321","duration":0.21320700645446777,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: +55 (11) 98765-4321","status":"passed","title":"should create Phone with valid value: +55 (11) 98765-4321","duration":0.21536600589752197,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should create Phone with valid value: +55 11 98765-4321","status":"passed","title":"should create Phone with valid value: +55 11 98765-4321","duration":0.29596400260925293,"failureMessages":[],"location":{"line":16,"column":24},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should format mobile phone correctly","status":"passed","title":"should format mobile phone correctly","duration":0.39913901686668396,"failureMessages":[],"location":{"line":24,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should format landline phone correctly","status":"passed","title":"should format landline phone correctly","duration":0.26283299922943115,"failureMessages":[],"location":{"line":29,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should add +55 prefix when missing","status":"passed","title":"should add +55 prefix when missing","duration":0.13902097940444946,"failureMessages":[],"location":{"line":34,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Valid Phones"],"fullName":"Phone Value Object Valid Phones should preserve +55 prefix when present","status":"passed","title":"should preserve +55 prefix when present","duration":0.11495500802993774,"failureMessages":[],"location":{"line":39,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Invalid Phones"],"fullName":"Phone Value Object Invalid Phones should throw error for invalid phone: 123","status":"passed","title":"should throw error for invalid phone: 123","duration":0.3156430125236511,"failureMessages":[],"location":{"line":54,"column":26},"meta":{}},{"ancestorTitles":["Phone Value Object","Invalid Phones"],"fullName":"Phone Value Object Invalid Phones should throw error for invalid phone: 12345678901234","status":"passed","title":"should throw error for invalid phone: 12345678901234","duration":0.5268040001392365,"failureMessages":[],"location":{"line":54,"column":26},"meta":{}},{"ancestorTitles":["Phone Value Object","Invalid Phones"],"fullName":"Phone Value Object Invalid Phones should throw error for invalid phone: +1234567890123","status":"passed","title":"should throw error for invalid phone: +1234567890123","duration":0.19877001643180847,"failureMessages":[],"location":{"line":54,"column":26},"meta":{}},{"ancestorTitles":["Phone Value Object","Invalid Phones"],"fullName":"Phone Value Object Invalid Phones should throw error for invalid phone: abcdefghijk","status":"passed","title":"should throw error for invalid phone: abcdefghijk","duration":0.23707500100135803,"failureMessages":[],"location":{"line":54,"column":26},"meta":{}},{"ancestorTitles":["Phone Value Object","Invalid Phones"],"fullName":"Phone Value Object Invalid Phones should throw error for invalid phone: +55119876543210","status":"passed","title":"should throw error for invalid phone: +55119876543210","duration":0.1596980094909668,"failureMessages":[],"location":{"line":54,"column":26},"meta":{}},{"ancestorTitles":["Phone Value Object","Empty Phone"],"fullName":"Phone Value Object Empty Phone should create empty phone when no value provided","status":"passed","title":"should create empty phone when no value provided","duration":0.1746000051498413,"failureMessages":[],"location":{"line":60,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Empty Phone"],"fullName":"Phone Value Object Empty Phone should create empty phone when empty string provided","status":"passed","title":"should create empty phone when empty string provided","duration":0.12434500455856323,"failureMessages":[],"location":{"line":67,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Empty Phone"],"fullName":"Phone Value Object Empty Phone should create empty phone when undefined provided","status":"passed","title":"should create empty phone when undefined provided","duration":0.14485898613929749,"failureMessages":[],"location":{"line":73,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Phone Methods"],"fullName":"Phone Value Object Phone Methods should compare phones correctly","status":"passed","title":"should compare phones correctly","duration":0.14778798818588257,"failureMessages":[],"location":{"line":81,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Phone Methods"],"fullName":"Phone Value Object Phone Methods should convert to string with formatting","status":"passed","title":"should convert to string with formatting","duration":0.184006005525589,"failureMessages":[],"location":{"line":90,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Phone Methods"],"fullName":"Phone Value Object Phone Methods should handle empty phone toString","status":"passed","title":"should handle empty phone toString","duration":0.10051900148391724,"failureMessages":[],"location":{"line":95,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Phone Cleaning"],"fullName":"Phone Value Object Phone Cleaning should clean phone with spaces and parentheses","status":"passed","title":"should clean phone with spaces and parentheses","duration":0.18374699354171753,"failureMessages":[],"location":{"line":102,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Phone Cleaning"],"fullName":"Phone Value Object Phone Cleaning should clean phone with dots and hyphens","status":"passed","title":"should clean phone with dots and hyphens","duration":0.11017900705337524,"failureMessages":[],"location":{"line":107,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Phone Cleaning"],"fullName":"Phone Value Object Phone Cleaning should clean phone with mixed formatting","status":"passed","title":"should clean phone with mixed formatting","duration":0.12141498923301697,"failureMessages":[],"location":{"line":112,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Edge Cases"],"fullName":"Phone Value Object Edge Cases should handle phone with extra spaces","status":"passed","title":"should handle phone with extra spaces","duration":0.091513991355896,"failureMessages":[],"location":{"line":119,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Edge Cases"],"fullName":"Phone Value Object Edge Cases should handle null","status":"passed","title":"should handle null","duration":0.08241698145866394,"failureMessages":[],"location":{"line":124,"column":5},"meta":{}},{"ancestorTitles":["Phone Value Object","Edge Cases"],"fullName":"Phone Value Object Edge Cases should differentiate mobile and landline formatting","status":"passed","title":"should differentiate mobile and landline formatting","duration":0.2618429958820343,"failureMessages":[],"location":{"line":129,"column":5},"meta":{}}],"startTime":1750877939287,"endTime":1750877939297.262,"status":"passed","message":"","name":"/home/ec2-user/clean-archi-base-api/src/domain/value-objects/phone.value-object.spec.ts"}]}