# =============================================================================
# Docker Compose for Development
# =============================================================================
version: '3.8'

services:
  # Application (Development)
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: clean-archi-api-dev
    ports:
      - "${API_PORT:-3000}:3000"
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://root:root@mongodb:27017
      - DATABASE_NAME=${DATABASE_NAME:-test}
      - API_PORT=${API_PORT:-3000}
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      # Hot reload - mount source code
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - app-logs:/usr/src/app/logs
    command: npm run start:debug

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: clean-archi-mongodb-dev
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: ${DATABASE_NAME:-test}
    volumes:
      - mongodb-dev-data:/data/db
      - mongodb-dev-config:/data/configdb
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (for development)
  redis:
    image: redis:7-alpine
    container_name: clean-archi-redis-dev
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-dev-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Express (Database Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: clean-archi-mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network

# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mongodb-dev-data:
    driver: local
  mongodb-dev-config:
    driver: local
  redis-dev-data:
    driver: local
  app-logs:
    driver: local
